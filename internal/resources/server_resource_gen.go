// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resources

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func ServerResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"backups": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "If true this will enable two daily backups for the server. `options.daily_backups` will override this value if provided. Setting this to false has no effect.\n",
				MarkdownDescription: "If true this will enable two daily backups for the server. `options.daily_backups` will override this value if provided. Setting this to false has no effect.\n",
			},
			"id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "The ID of the server to fetch.",
				MarkdownDescription: "The ID of the server to fetch.",
			},
			"image": schema.StringAttribute{
				Required:            true,
				Description:         "The slug of the selected operating system.",
				MarkdownDescription: "The slug of the selected operating system.",
			},
			"name": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The hostname of your server, such as vps01.yourcompany.com. If not provided, the server will be created with a random name.",
				MarkdownDescription: "The hostname of your server, such as vps01.yourcompany.com. If not provided, the server will be created with a random name.",
			},
			"password": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "If this is provided the specified or default remote user's account password will be set to this value. Only valid if the server supports password change actions (check server.password_change_supported via the servers endpoint). If omitted and the server supports password change actions a random password will be generated and emailed to the account email address.\n",
				MarkdownDescription: "If this is provided the specified or default remote user's account password will be set to this value. Only valid if the server supports password change actions (check server.password_change_supported via the servers endpoint). If omitted and the server supports password change actions a random password will be generated and emailed to the account email address.\n",
			},
			"region": schema.StringAttribute{
				Required:            true,
				Description:         "The slug of the selected region.",
				MarkdownDescription: "The slug of the selected region.",
				Validators: []validator.String{
					stringvalidator.LengthAtLeast(1),
				},
			},
			"size": schema.StringAttribute{
				Required:            true,
				Description:         "The slug of the selected size.",
				MarkdownDescription: "The slug of the selected size.",
				Validators: []validator.String{
					stringvalidator.LengthAtLeast(1),
				},
			},
			"user_data": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "If provided this will be used to initialise the new server. This must be left null if the Image does not support UserData, see DistributionInfo.Features for more information.",
				MarkdownDescription: "If provided this will be used to initialise the new server. This must be left null if the Image does not support UserData, see DistributionInfo.Features for more information.",
				Validators: []validator.String{
					stringvalidator.LengthAtMost(65536),
				},
			},
		},
	}
}

type ServerModel struct {
	Backups  types.Bool   `tfsdk:"backups"`
	Id       types.Int64  `tfsdk:"id"`
	Image    types.String `tfsdk:"image"`
	Name     types.String `tfsdk:"name"`
	Password types.String `tfsdk:"password"`
	Region   types.String `tfsdk:"region"`
	Size     types.String `tfsdk:"size"`
	UserData types.String `tfsdk:"user_data"`
}
