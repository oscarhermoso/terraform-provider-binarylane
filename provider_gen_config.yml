# https://developer.hashicorp.com/terraform/plugin/code-generation/openapi-generator

provider:
  name: binarylane
  schema:
    attributes:
      api_endpoint:
        source: env
        name: BINARYLANE_API_ENDPOINT
      api_token:
        source: env
        name: BINARYLANE_API_TOKEN
        sensitive: true

resources:
  server:
    create:
      path: /servers
      method: POST
    read:
      path: /servers/{server_id}
      method: GET
    delete:
      path: /servers/{server_id}
      method: DELETE
    schema:
      attributes:
        aliases:
          server_id: id
        overrides:
          backups:
            type: bool
            description: >
              If true this will enable two daily backups for the server. `options.daily_backups` will override this
              value if provided. Setting this to false has no effect.
            optional: true
            default:
              static: false
            computed: false
          image:
            type: string
            description: The slug of the selected operating system.
            example: 'ubuntu-24.04'
          password:
            type: string
            description: >
              If this is provided the specified or default remote user's account password will be set to this value.
              Only valid if the server supports password change actions (check server.password_change_supported via the
              servers endpoint). If omitted and the server supports password change actions a random password will be
              generated and emailed to the account email address.
            sensitive: true
            optional_required: optional
      ignores:
        - ipv6
        - licenses
        - links
        - server
        - options
  server_firewall_rules:
    create:
      path: /servers/{server_id}/actions#ChangeAdvancedFirewallRules
      method: POST
    read:
      path: /servers/{server_id}/advanced_firewall_rules
      method: GET
    update:
      path: /servers/{server_id}/actions#ChangeAdvancedFirewallRules
      method: POST
    delete:
      path: /servers/{server_id}/actions#ChangeAdvancedFirewallRules
      method: POST
    schema:
      ignores:
        - type
        - action
  ssh_key:
    create:
      path: /account/keys
      method: POST
    read:
      path: /account/keys/{key_id}
      method: GET
    delete:
      path: /account/keys/{key_id}
      method: DELETE
    schema:
      attributes:
        aliases:
          key_id: id
      ignores:
        - ssh_key
  vpc:
    create:
      path: /vpcs
      method: POST
    read:
      path: /vpcs/{vpc_id}
      method: GET
    update:
      path: /vpcs/{vpc_id}
      method: PATCH
    delete:
      path: /vpcs/{vpc_id}
      method: DELETE
    schema:
      attributes:
        aliases:
          vpc_id: id
      ignores:
        - route_entries
        - vpc
  vpc_route_entries:
    create:
      path: /vpcs/{vpc_id}
      method: PATCH
    read:
      path: /vpcs/{vpc_id}
      method: GET
    update:
      path: /vpcs/{vpc_id}
      method: PATCH
    delete:
      path: /vpcs/{vpc_id}
      method: DELETE
    schema:
      ignores:
        - name
        - vpc
# data_sources:
# Currently, don't need to generate data sources as they use the same schema as resources
